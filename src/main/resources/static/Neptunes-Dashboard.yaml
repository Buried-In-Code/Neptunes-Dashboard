openapi: 3.0.2
info:
  title: Neptune's Dashboard
  contact:
    email: JonahJ@datacom.co.nz
  version: "3.2.1"
servers:
  - url: localhost:6790
  - url: https://neptunes-dashboard.bitcloud.nz
tags:
  - name: Contributor
    description: Contributor Information
  - name: Game
    description: Game Information
  - name: Player
    description: Player Information
  - name: Turn
    description: Turn Information
paths:
  /api/v2/contributors:
    get:
      tags:
        - Contributor
      summary: Contributor List
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contributor'
  /api/v2/games:
    get:
      tags:
        - Game
      summary: Get all monitored games
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Game'
  /api/v2/games/{GameID}:
    parameters:
      - $ref: '#/components/parameters/gameParam'
    get:
      tags:
        - Game
      summary: Get a game by its ID
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'
    put:
      tags:
        - Game
      summary: Update game data
      responses:
        202:
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'
    post:
      tags:
        - Game
      summary: Create game entry
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'
  /api/v2/games/{GameID}/players:
    parameters:
      - $ref: '#/components/parameters/gameParam'
    get:
      tags:
        - Player
      summary: Gets all players from the given game
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Player'
  /api/v2/games/{GameID}/players/{Username}:
    parameters:
      - $ref: '#/components/parameters/gameParam'
      - $ref: '#/components/parameters/playerParam'
    get:
      tags:
        - Player
      summary: Gets the player with the given username from the given game
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'
    patch:
      tags:
        - Player
      summary: Update player data
      responses:
        202:
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'
  /api/v2/games/{GameID}/players/{Username}/turns:
    parameters:
      - $ref: '#/components/parameters/gameParam'
      - $ref: '#/components/parameters/playerParam'
    get:
      tags:
        - Turn
      summary: Gets all the turn of the player with the given username from the given game
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Turn'
  /api/v2/games/{GameID}/players/{Username}/turns/{Turn}:
    parameters:
      - $ref: '#/components/parameters/gameParam'
      - $ref: '#/components/parameters/playerParam'
      - $ref: '#/components/parameters/turnParam'
    get:
      tags:
        - Turn
      summary: Gets all the turns of the player with the given username from the given game
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Turn'
components:
  parameters:
    gameParam:
      in: path
      name: GameID
      required: false
      schema:
        type: number
        default: latest
      description: ID of the Game
    playerParam:
      in: path
      name: Username
      required: true
      schema:
        type: string
      description: Username of the Player
    turnParam:
      in: path
      name: Turn
      required: true
      schema:
        type: number
      description: Turn number
  schemas:
    Contributor:
      type: object
      properties:
        title:
          type: string
        role:
          type: string
    Game:
      type: object
      properties:
        id:
          type: number
        title:
          type: string
        type:
          type: string
        victoryStars:
          type: number
        totalStars:
          type: number
        isTradeScanOnly:
          type: boolean
        isTurnBased:
          type: boolean
        isPaused:
          type: boolean
        isGameOver:
          type: boolean
        isStarted:
          type: boolean
        startTime:
          type: string
          format: date-time
        turn:
          type: number
        nextTurn:
          type: string
          format: date-time
        players:
          type: array
          items:
            $ref: '#/components/schemas/Player'
    Player:
      type: object
      properties:
        username:
          type: string
        team:
          type: string
          nullable: true
        turns:
          type: array
          items:
            $ref: '#/components/schemas/Turn'
    Turn:
      type: object
      properties:
        turn:
          type: number
        stars:
          type: number
        carriers:
          type: number
        ships:
          type: number
        isActive:
          type: boolean
        infrastructure:
          type: object
          properties:
            economy:
              type: number
            economyPerHr:
              type: number
            industry:
              type: number
            industryPerHr:
              type: number
            science:
              type: number
            sciencePerHr:
              type: number
        technology:
          type: object
          properties:
            scanning:
              type: number
            hyperspaceRange:
              type: number
            terraforming:
              type: number
            experimentation:
              type: number
            weapons:
              type: number
            banking:
              type: number
            manufacturing:
              type: number