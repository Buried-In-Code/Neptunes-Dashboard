openapi: 3.0.2
info:
  title: Neptune's Dashboard
  contact:
    email: JonahJ@datacom.co.nz
  version: "3.2.1"
servers:
  - url: localhost:6790
  - url: https://neptunes-dashboard.bitcloud.nz
tags:
  - name: Contributor
    description: Contributor Information
  - name: Game
    description: Game Information
  - name: Player
    description: Player Information
  - name: Tick
    description: Tick Information
paths:
  /api/contributors:
    get:
      tags:
        - Contributor
      summary: Contributor List
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contributor'
  /api/games:
    get:
      tags:
        - Game
      summary: Get all monitored games
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Game'
  /api/games/{gameID}:
    parameters:
      - $ref: '#/components/parameters/gameParam'
    get:
      tags:
        - Game
      summary: Get a game by its ID
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'
    put:
      tags:
        - Game
      summary: Update game data
      responses:
        202:
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'
    post:
      tags:
        - Game
      summary: Create game entry
      parameters:
        - name: code
          in: query
          description: API Game code
          required: true
          schema:
            type: string
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'
  /api/games/{gameID}/players:
    parameters:
      - $ref: '#/components/parameters/gameParam'
    get:
      tags:
        - Player
      summary: Gets all players from the given game
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Player'
  /api/games/{gameID}/players/{alias}:
    parameters:
      - $ref: '#/components/parameters/gameParam'
      - $ref: '#/components/parameters/playerParam'
    get:
      tags:
        - Player
      summary: Gets the player with the given alias from the given game
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'
    put:
      tags:
        - Player
      summary: Update player data
      responses:
        202:
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'
  /api/games/{gameID}/players/{alias}/ticks:
    parameters:
      - $ref: '#/components/parameters/gameParam'
      - $ref: '#/components/parameters/playerParam'
    get:
      tags:
        - Tick
      summary: Gets all the ticks of the player with the given alias from the given game
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tick'
  /api/games/{gameID}/players/{alias}/ticks/{tickID}:
    parameters:
      - $ref: '#/components/parameters/gameParam'
      - $ref: '#/components/parameters/playerParam'
      - $ref: '#/components/parameters/tickParam'
    get:
      tags:
        - Tick
      summary: Gets all the ticks of the player with the given alias from the given game
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tick'
components:
  parameters:
    gameParam:
      in: path
      name: gameID
      required: false
      schema:
        type: number
        default: latest
      description: ID of the Game
    playerParam:
      in: path
      name: alias
      required: true
      schema:
        type: string
      description: Alias of the Player
    tickParam:
      in: path
      name: tickID
      required: true
      schema:
        type: number
      description: ID of the Tick
  schemas:
    Contributor:
      type: object
      properties:
        title:
          type: string
        role:
          type: string
    Game:
      type: object
      properties:
        id:
          type: number
        fleetSpeed:
          type: number
        isPaused:
          type: boolean
        productions:
          type: number
        tickFragment:
          type: number
        tickRate:
          type: number
        productionRate:
          type: number
        victoryStars:
          type: number
        isGameOver:
          type: boolean
        isStarted:
          type: boolean
        startTime:
          type: string
          format: date-time
        totalStars:
          type: number
        productionCounter:
          type: number
        isTradeScanned:
          type: boolean
        tick:
          type: number
        tradeCost:
          type: number
        name:
          type: string
        isTurnBased:
          type: boolean
        war:
          type: number
        turnTimeout:
          type: string
          format: date-time
        fleetPrice:
          type: number
        gameType:
          type: string
    Player:
      type: object
      properties:
        id:
          type: number
        alias:
          type: string
        name:
          type: string
          nullable: true
        team:
          type: string
          nullable: true
    Tick:
      type: object
      properties:
        id:
          type: number
        tick:
          type: number
        stars:
          type: number
        fleets:
          type: number
        ships:
          type: number
        isActive:
          type: boolean
        economy:
          type: number
        economyPerTick:
          type: number
        industry:
          type: number
        industryPerTick:
          type: number
        science:
          type: number
        sciencePerTick:
          type: number
        research:
          type: object
          properties:
            scanning:
              type: number
            hyperspaceRange:
              type: number
            terraforming:
              type: number
            experimentation:
              type: number
            weapons:
              type: number
            banking:
              type: number
            manufacturing:
              type: number