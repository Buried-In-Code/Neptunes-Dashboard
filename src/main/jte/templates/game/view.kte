@import gg.jte.support.ForSupport
@import github.buriedincode.models.Game
@import github.buriedincode.Utils.titlecase
@import github.buriedincode.Utils.toHumanReadable
@import github.buriedincode.Utils.localeString
@import kotlin.collections.List
@param games: List<Game>
@param resource: Game

<!DOCTYPE html>
<html lang="en-GB" data-theme="dark">
<head>
    <meta charset="UTF-8">
    <meta content="width=device-width, initial-scale=1" name="viewport">
    <title>Neptune's Dashboard</title>
    <link href="https://use.fontawesome.com/releases/v6.3.0/css/all.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bulma@1.0.4/css/bulma.min.css" rel="stylesheet">
    <link href="/static/css/styles.css" rel="stylesheet">
    <link href="/static/img/favicon.ico" id="favicon" rel="icon" type="image/x-icon">
</head>
<body class="has-navbar-fixed-top">
@template.components.navbar(games = games.filterNot { it.isGameOver })
<main class="section">
    <div class="container is-fluid">
        <header class="block has-text-centered">
            <h1 class="title is-1">${ resource.name }</h1>
            <h3 class="subtitle is-3">${ resource.type.titlecase() }</h3>
        </header>
        <nav class="level is-mobile">
            <div class="level-left"></div>
            <div class="level-right">
                <button class="button is-info" id="manual-refresh-button" onclick="manualRefresh();">
                    <span class="icon">
                        <i class="fa-solid fa-rotate"></i>
                    </span>
                    <span>Manual refresh</span>
                </button>
            </div>
        </nav>
        <div class="box has-text-centered">
            <nav class="level is-mobile">
                <div class="level-item">
                    <div>
                        <p class="heading">Started At</p>
                        @if(resource.isStarted)
                            <p class="title">${ resource.startTime.toHumanReadable() }</p>
                        @else
                            <p class="title">Not Started</p>
                        @endif
                    </div>
                </div>
            </nav>
            <nav class="level is-mobile">
                <div class="level-item">
                    <div>
                        <p class="heading"># of Players</p>
                        <p class="title">${ resource.players.count() }</p>
                    </div>
                </div>
                <div class="level-item">
                    <div>
                        <p class="heading"># of Stars to Win</p>
                        <p class="title">${ resource.starsForVictory.localeString() } / ${ resource.totalStars.localeString() }</p>
                    </div>
                </div>
            </nav>
            <nav class="level is-mobile">
                <div class="level-item">
                    <div>
                        <p class="heading">Turn #</p>
                        <p class="title">${ resource.turn.localeString() }</p>
                    </div>
                </div>
                <div class="level-item">
                    <div>
                        <p class="heading">Next Turn</p>
                        @if(resource.isPaused)
                            <p class="title">Paused</p>
                        @elseif(resource.isGameOver)
                            <p class="title">Game Ended</p>
                        @else
                            <p class="title">${ resource.nextTurn.toHumanReadable() }</p>
                        @endif
                    </div>
                </div>
            </nav>
        </div>
        <div class="columns is-multiline is-centered is-widescreen">
            <div class="column is-half-widescreen">
                <div class="box has-text-centered">
                    <h3 class="title is-3 has-text-centered">Game Progress</h3>
                    <div class="chart-container" hidden>
                        <canvas height="750" id="game-progression"></canvas>
                    </div>
                    <div class="block">
                        <progress class="progress is-info is-small" id="game-progression-loading"></progress>
                    </div>
                </div>
            </div>
            <div class="column is-half-widescreen">
                <div class="box has-text-centered">
                    <h3 class="title is-3 has-text-centered">Star Distribution</h3>
                    <div class="chart-container" hidden>
                        <canvas height="750" id="star-distribution"></canvas>
                    </div>
                    <div class="block">
                        <progress class="progress is-info is-small" id="star-distribution-loading"></progress>
                    </div>
                </div>
            </div>
        </div>
    </div>
</main>
@template.components.footer()
<script src="/static/js/scripts.js" type="text/javascript"></script>
<script src="/static/js/bulma-navbar.js" type="text/javascript"></script>
<script src="https://cdn.jsdelivr.net/npm/jquery@^3.7" type="text/javascript"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js@^4.4" type="text/javascript"></script>
<script src="https://cdn.jsdelivr.net/npm/patternomaly@^1.3" type="text/javascript"></script>
<script src="/static/js/charts.js" type="text/javascript"></script>
<script type="text/javascript">
  ready(() => {
    const labels = [@for(turn in 0..resource.turn)"Turn ${turn.localeString()}"@endfor];
    const datasets = [];
    @for(loop in ForSupport.of(resource.players.filter { it.isActive }.sortedBy { it.turns.first().stars }))
      datasets.push(createDataset(${loop.index}, [@for(turn in loop.get().turns.sorted())${turn.stars.localeString()},@endfor], "${loop.get().username}", "line"));
    @endfor
    createChart("game-progression", labels, datasets);
  });
  ready(() => {
    const labels = [@for(player in resource.players.filter { it.isActive }.sortedBy { it.turns.first().stars })"${player.username}", @endfor"Unclaimed"];
    const data = [@for(player in resource.players.filter { it.isActive }.sortedBy { it.turns.first().stars })${player.turns.first().stars.localeString()}, @endfor${(resource.totalStars - resource.players.sumOf{ it.turns.first().stars }).localeString()}];
    createPieChart("star-distribution", labels, data);
  });
  async function manualRefresh() {
    const caller = "manual-refresh-button";
    addLoading(caller);

    const response = await submitRequest("/api/games/${resource.id.value}", "PUT");
    if (response !== null)
      window.location.reload();
    removeLoading(caller);
}
</script>
</body>
</html>